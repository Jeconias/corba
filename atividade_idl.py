# Python stubs generated by omniidl from atividade.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "EncryptDecrypt"
#
__name__ = "EncryptDecrypt"
_0_EncryptDecrypt = omniORB.openModule("EncryptDecrypt", r"atividade.idl")
_0_EncryptDecrypt__POA = omniORB.openModule("EncryptDecrypt__POA", r"atividade.idl")


# interface EDString
_0_EncryptDecrypt._d_EDString = (omniORB.tcInternal.tv_objref, "IDL:EncryptDecrypt/EDString:1.0", "EDString")
omniORB.typeMapping["IDL:EncryptDecrypt/EDString:1.0"] = _0_EncryptDecrypt._d_EDString
_0_EncryptDecrypt.EDString = omniORB.newEmptyClass()
class EDString :
    _NP_RepositoryId = _0_EncryptDecrypt._d_EDString[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_EncryptDecrypt.EDString = EDString
_0_EncryptDecrypt._tc_EDString = omniORB.tcInternal.createTypeCode(_0_EncryptDecrypt._d_EDString)
omniORB.registerType(EDString._NP_RepositoryId, _0_EncryptDecrypt._d_EDString, _0_EncryptDecrypt._tc_EDString)

# EDString operations and attributes
EDString._d_echoString = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), ), None)

# EDString object reference
class _objref_EDString (CORBA.Object):
    _NP_RepositoryId = EDString._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def echoString(self, *args):
        return _omnipy.invoke(self, "echoString", _0_EncryptDecrypt.EDString._d_echoString, args)

    __methods__ = ["echoString"] + CORBA.Object.__methods__

omniORB.registerObjref(EDString._NP_RepositoryId, _objref_EDString)
_0_EncryptDecrypt._objref_EDString = _objref_EDString
del EDString, _objref_EDString

# EDString skeleton
__name__ = "EncryptDecrypt__POA"
class EDString (PortableServer.Servant):
    _NP_RepositoryId = _0_EncryptDecrypt.EDString._NP_RepositoryId


    _omni_op_d = {"echoString": _0_EncryptDecrypt.EDString._d_echoString}

EDString._omni_skeleton = EDString
_0_EncryptDecrypt__POA.EDString = EDString
omniORB.registerSkeleton(EDString._NP_RepositoryId, EDString)
del EDString
__name__ = "EncryptDecrypt"

#
# End of module "EncryptDecrypt"
#
__name__ = "atividade_idl"

_exported_modules = ( "EncryptDecrypt", )

# The end.
